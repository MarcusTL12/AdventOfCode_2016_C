build_dir = build/release
c_flags = -stdlib=libc
l_flags = -lpcre2-8 -lcrypto

rule cc
    command = clang -O3 -o $out -c $in

rule link
    command = clang $c_flags -o $out $in $l_flags

build $build_dir/day6.o: cc ./src/day6.c
build $build_dir/day9.o: cc ./src/day9.c
build $build_dir/day3.o: cc ./src/day3.c
build $build_dir/day5.o: cc ./src/day5.c
build $build_dir/day4.o: cc ./src/day4.c
build $build_dir/day8.o: cc ./src/day8.c
build $build_dir/day7.o: cc ./src/day7.c
build $build_dir/day1.o: cc ./src/day1.c
build $build_dir/day10.o: cc ./src/day10.c
build $build_dir/day2.o: cc ./src/day2.c
build $build_dir/main.o: cc ./src/main.c
build $build_dir/regex_util.o: cc ./AoC_C_utils/src/regex_util.c
build $build_dir/md5_util.o: cc ./AoC_C_utils/src/md5_util.c
build $build_dir/bitfield.o: cc ./AoC_C_utils/src/bitfield.c
build $build_dir/file_util.o: cc ./AoC_C_utils/src/file_util.c
build $build_dir/hashmap.o: cc ./packages/hashmap.c/hashmap.c

build a.out: link $
    $build_dir/day6.o $
    $build_dir/day9.o $
    $build_dir/day3.o $
    $build_dir/day5.o $
    $build_dir/day4.o $
    $build_dir/day8.o $
    $build_dir/day7.o $
    $build_dir/day1.o $
    $build_dir/day10.o $
    $build_dir/day2.o $
    $build_dir/main.o $
    $build_dir/regex_util.o $
    $build_dir/md5_util.o $
    $build_dir/bitfield.o $
    $build_dir/file_util.o $
    $build_dir/hashmap.o
